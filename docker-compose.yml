version: "3.8"

networks:
  api-network:
    driver: bridge

services:
  api:
    env_file: .env.docker
    restart: always
    build: .
    ports:
      - "3060:3060"
    networks:
      - api-network
    depends_on:
      - mongo
      - redis

  mongo:
    image: 'bitnami/mongodb:latest'
    env_file: .env.docker
    ports:
      - 27019:27017
    environment:
      - MONGODB_USERNAME=$MONGODB_USER
      - MONGODB_PASSWORD=$MONGODB_PASSWORD
      - MONGODB_DATABASE=$MONGODB_DATABASE
      - MONGODB_ROOT_PASSWORD=$MONGODB_PASSWORD
    volumes:
      - ./data/mongo:/bitnami/mongodb
    networks:
      - api-network

  redis:
    image: 'bitnami/redis:latest'
    env_file: .env.docker
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - 6379:6379
    networks:
      - api-network
    volumes:
      - ./data/redis:/bitnami/redis

  webserver:
    depends_on:
      - api
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./data/nginx:/etc/nginx/conf.d
      - certbot-etc:/etc/letsencrypt
    command: “/bin/sh -c ‘while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \”daemon off;\”‘”
    networks:
      - api-network

  certbot:
    depends_on:
      - webserver
    image: certbot/certbot
    container_name: certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
    entrypoint: “/bin/sh -c ‘trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'”

volumes:
  mongo_data:
  certbot-etc:
  redis_data:
